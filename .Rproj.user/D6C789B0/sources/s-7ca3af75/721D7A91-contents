---
title: "FINAL PROJECT"
author: "Khanh Tra Nguyen Tran, Luanga Kasanga"
date: "12/6/2023"
output:
  html_document: default
  pdf_document: default
editor_options:
  chunk_output_type: console
  always_allow_html: true
---

```{r setup, include=FALSE, error = TRUE}
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(zoo)
library(ggridges)
library(countrycode)
library(lubridate)
library(ggplot2)
library(gganimate)
library(plotly)

```

# I. Introduction:

# II. WRANGLE DATASET:

```{r}
# Our World in Data CO2 Dataset
co2 <- readr::read_csv('~/Mscs 164 F23/Project/Fay & Luanga Project Folder/Fay_Luanga/owid-co2-data.csv')
# Codebook for Our World in Data CO2 Dataset
codebook <-  readr::read_csv('~/Mscs 164 F23/Project/Fay & Luanga Project Folder/Fay_Luanga/owid-co2-codebook.csv')
# Climate Disaster Frequency Dataset
Climate_related_Disasters_Frequency <- read_csv("~/Mscs 164 F23/Project/Fay & Luanga Project Folder/Fay_Luanga/Climate-related_Disasters_Frequency.csv")
# Ecological Footprint Dataset
library(readxl)
NFBA_2023_Public_Data_Package_1_0 <- read_excel("//home/rstudio/courses/2023-24-semester1-mscs-164/Project/Fay & Luanga Project Folder/Fay_Luanga/NFBA 2023 Public Data Package 1.0.xlsx", 
    sheet = "Country Results (2019)", range = "A23:AF206")

eco_footprint <- NFBA_2023_Public_Data_Package_1_0

```

```{r}
continent_co2 <- co2 |>
  filter(year >= 1970, country %in% c("Africa","Asia", "Europe", "South America", "North America", "Oceania")) |>
  select(-gdp)
```

```{r}
country_co2 <- co2 |>
  filter(year >= 1970, !(country %in% c("Africa","Asia", "Europe", "South America", "North America", "Oceania")), 
         !is.na(iso_code))
```

Here we are pivoting longer the Climate Related Disasters Frequency Data in order to make it suitable for viewing.

```{r}
disasters_long <- Climate_related_Disasters_Frequency |> 
  filter(Indicator == "Climate related disasters frequency, Number of Disasters: TOTAL") |>
  pivot_longer(
    cols = starts_with("F"), 
    names_to = "year", 
    values_to = "disasters") |>
mutate_at("year", str_replace, "F", "") |>
 replace_na(list(disasters = 0)) |>
  mutate(iso_code = ISO3, year = parse_number(year)) |>
  select(year, iso_code, disasters) 

```

```{r}
# Here, we are trying to convert country ISO Codes to a country name, or to designate a region for it. This is where the country code library help us out!

disasters_long$continent <- countrycode(sourcevar = disasters_long$iso_code,
                             origin = "iso3c",
                             destination = "un.region.name")
disasters_long$country <- countrycode(sourcevar = disasters_long$iso_code,
                             origin = "iso3c",
                             destination = "iso.name.en")
country_co2$region <- countrycode(sourcevar = country_co2$iso_code,
                             origin = "iso3c",
                             destination = "un.region.name")

eco_footprint$continent <- countrycode(sourcevar = eco_footprint$Country,
                             origin = "country.name",
                             destination = "un.region.name")
#Extra tidying for ecological footprint

eco_footprint <- eco_footprint |>
  mutate(eco_decifit = `Ecological (Deficit) or Reserve`)
```

We also need to join the climate_related disasters data to our country_co2 dataset. For now, I am just putting it in country_disaster so we don't mess up our data.

# DATASET OVERVIEW

Table with variables we consider:

```{r}
country_graph1 <- data_frame(
Variable = c("cement_co2", "coal_co2", "flaring_co2", "gas_co2", "land_use_change_co2", "oil_co2", "other_industry_co2"),
Definition = codebook |> 
  filter(column %in% Variable) |>
  pull(description))
kable(country_graph1, caption = "Variables in Graph F1")
```

### Top 10 countries with CO2 emission

```{r,error =TRUE}
top10_country <- country_co2 |>
  filter(year == 2021) |>
  slice_max(cumulative_co2_including_luc, n = 10) |>
  mutate(ranking = row_number()) |>
  tibble("top_country" = country, "rank" = ranking) |>
  select(top_country, rank)
```

```{r,error =TRUE}
country_co2 |> 
  right_join(top10_country, join_by(country == top_country)) |>
  select(country,
         year, 
         cement_co2, 
         coal_co2, 
         flaring_co2, 
         gas_co2, 
         land_use_change_co2,
         oil_co2, 
         other_industry_co2,
         co2_including_luc) |>
  replace_na(list(other_industry_co2 = 0)) |>
  mutate(country = fct_relevel(country, "United States", "China", "Russia", "Brazil", "India", "Germany", "Indonesia", "United Kingdom", "Canada", "Japan")) |>
  pivot_longer(cement_co2:other_industry_co2, names_to = "co2_sources", values_to = "value") |>
  mutate(co2_sources = fct_recode(co2_sources, 
                                  "Coal" = "coal_co2",
                                  "Flaring" = "flaring_co2",
                                  "Cement" = "cement_co2",
                                  "Gas" = "gas_co2",
                                  "Land Use" = "land_use_change_co2",
                                  "Oil" = "oil_co2",
                                  "Other industry" = "other_industry_co2")) |>
  ggplot(aes(x=year, 
                  y=value, 
                  fill=fct_reorder2(co2_sources, value, year))) +
  geom_area() +
  facet_wrap(~country) +
  theme_classic() +
  labs(title = "F1", alt ="aa", x = "Year", y = "Carbon Dioxide Emission", fill = "Sources") 
```

# 10 MOST DISASTER

```{r,error =TRUE}
top10_disaster <-
  disasters_long |>
  group_by(iso_code) |>
  summarize(sum_disaster = sum(disasters)) |>
  slice_max(sum_disaster, n = 10)
```

```{r,error =TRUE}
b <-country_co2 |> 
  semi_join(top10_disaster, join_by(iso_code)) |>
  select(country,
         year, 
         cement_co2, 
         coal_co2, 
         flaring_co2, 
         gas_co2, 
         land_use_change_co2,
         oil_co2, 
         other_industry_co2,
         co2_including_luc) |>
  mutate(across(cement_co2:co2_including_luc)/100) |>
   mutate(country = fct_relevel(country, "United States", "China", "India", "Philippines", "Indonesia", "Bangladesh", "Vietnam", "Mexico", "Brazil", "Japan")) |>
  replace_na(list(other_industry_co2 = 0)) |>
  pivot_longer(cement_co2:other_industry_co2, names_to = "co2_sources", values_to = "value") |>
  mutate(co2_sources = fct_recode(co2_sources, 
                                  "Coal" = "coal_co2",
                                  "Flaring" = "flaring_co2",
                                  "Cement" = "cement_co2",
                                  "Gas" = "gas_co2",
                                  "Land Use" = "land_use_change_co2",
                                  "Oil" = "oil_co2",
                                  "Other industry" = "other_industry_co2")) 
```

Animated stacked bar chart

```{r}
  g1 <- b |> ggplot(aes(x = year)) +
  geom_area(aes(y=value, 
                  fill=fct_reorder2(co2_sources, value, desc(year)))) +
  facet_wrap(~country) +
  theme_classic() +
  labs(title = "F2", alt ="aa", x = "Year", y = "Carbon Dioxide Emission", fill = "Sources") +
  scale_color_manual(name = "Disasters", values = "red")
```

g2 \<- disasters_long \|\> semi_join(top10_disaster, join_by(iso_code)) \|\> ggplot(aes(x = year, y = disasters)) + geom_point() + facet_wrap(\~ country) scale_x\_continuous()

```{r}
dual_y_axis_plot <- g1 +
  geom_smooth(data = disasters_long |>
               semi_join(top10_disaster, by = "iso_code"),
             aes(x = year, y = disasters),
             color = "#fff000",  
             size = 1) +      
  scale_color_manual(name = "Disasters", values = "red") +
  theme_dark() +
  labs(title = "F2", x = "Year", y = "CO2 Emission", fill = "Sources") +
  theme(axis.title.y.right = element_text(color = "red")) + 
  scale_y_continuous(
    name = "CO2 Emission",
    breaks = seq(0, 8000, 2000),  
    limits = c(0, 8000)          
  ) +
  scale_y_continuous(
    name = "Disasters",
    sec.axis = sec_axis(~., name = "Disasters", breaks = seq(0, 200, 50))
  ) 


```

# Top 10 Highest Ecofootprint Decifit

```{r,error =TRUE}
eco_footprint |>
  group_by(Country) |>
  summarize(eco_decifit, continent) |>
  slice_min(eco_decifit, n = 10) |>
  mutate("rank" = row_number()) |>
  ggplot(aes(x=fct_reorder2(Country, Country, rank, .desc = FALSE),y=eco_decifit, fill=fct_reorder2(continent, Country, rank), text = paste(Country, eco_decifit))) +
  geom_bar(stat="identity") +
  theme_classic() +
  labs(title = "Room to Improve..", subtitle = "Top 10 countries with biggest ecological decifit", alt ="aa", x = "Country", y = "Ecological Decifit (gha)", fill = "Continent", caption = "Source: Global Footprint Centre") 

ggplotly(tooltip="text")
```

# Top 10 Lowest Ecofootprint Decifit

```{r,error =TRUE}
eco_footprint |>
  group_by(Country) |>
  summarize(eco_decifit, continent) |>
  slice_max(eco_decifit, n = 10) |>
  mutate("rank" = row_number()) |>
  ggplot(aes(x=fct_reorder2(Country, Country, rank, .desc = FALSE),y=eco_decifit, fill=fct_reorder2(continent, Country, rank), text = paste(Country, eco_decifit))) +
  geom_bar(stat="identity") +
  theme_classic() +
  labs(title = "The Lowest Net Ecological Decifits", alt ="aa", x = "Country", y = "Ecological Decifit ((gha)", fill = "Continent", caption = "Source: Global Footprint Centre") 

ggplotly(tooltip="text")
```

### How has each continent fared when it comes to energy per gdp?

Variable: energy_per_gdp

```{r}
continent_co2 |>
  select(country, year, primary_energy_consumption) |>
  ggplot(aes(x = year, y = primary_energy_consumption)) +
geom_point() +
geom_path() +
geom_hline(yintercept = 0) +
#scale_color_colorblind() +
labs(color = "Country", title = "Relationship of energy production to Imports over time\nfor top 5 global energy producer", subtitle = "Net imports below 0 indicates exporting of energy", caption = "Data source: To be added")

```

### Which continents bear the brunt of responsiblity, and then the consequences climate change??

Variable: co2_per_capita

```{r}
continent_co2 |>
  filter(year >= 1970) |>
  ggplot() +
  geom_col(aes(x = year, y = co2_per_capita, fill = country), position = "fill") +
  coord_flip() + 
  labs(title = "Contribution to Climate Change by Continent", caption = "Data from ourworldindata.com", x = "Year", y = "CO2 Per Capita (% of global)", fill = "Continent")
  
```

And now, which countries are ruined by climate change related disasters?

```{r}
disasters_long |>
  filter(year >= 1990) |>
  ggplot() +
  geom_col(aes(x = year, y = disasters, fill = continent), position = "fill") +
  coord_flip() + 
  labs(title = "Sufferors of Climate Change by Continent", caption = "Data from ourworldindata.com", x = "Year", y = "Share of Climate Related Disasters", fill = "Continent")
  
```

Just testing some stuff:

```{r}
continent_co2 |>
  filter(year >= 1970) |>
ggplot(aes(group = country, x = year, y = population, color = country)) +
geom_smooth(aes(), se = FALSE, size = 0.5) +
  labs(
  title = "Population vs CO2 Expansion",
  subtitle = "1970-Present",
  caption = "Data from Ourworldindata.org",
  tag = "Graph 5",
  alt = "?",
  alt_insight = "insight"
)

```

ignore pls

continent_co2 \|\> filter(year \>= 1970) \|\> ggplot(aes(group = country, x=year, fill = country)) + geom_point(stat='identity', aes(y=co2), size=.1, color="black", alpha=.4) + geom_line(aes(y=population, color = country), size=0.5) +

scale_y\_continuous(

    # Features of the first axis
    name = "Temperature (Celsius °)",

    # Add a second axis and specify its features
    sec.axis = sec_axis(name="Price ($)")

) +

ggtitle("Temperature down, price up")

```{r}
continent_co2 |>
  #filter(year >= 1970) |>
ggplot(aes(group = country, x=year, colour = country)) +
#geom_line(aes(y=population), size=0.5) +
  geom_line(aes(y=co2))
```

*Interactive Plot*

```{r}
country_co2 |>
  filter(year == 2018) |>
ggplot(aes(population, co2_per_gdp, colour = region, text = paste(country))) +
  geom_point() +
  theme_bw() 

  ggplotly(tooltip="text")
```

How country CO2 emissions and GDP has changed over time.

```{r}

continent_co2 
  
```

ANIMATED PLOT

\#`{r} ggplot(   continent_co2,    aes(x = co2, y=co2_per_capita, size = population, colour = country)   ) +   geom_point(show.legend = TRUE, alpha = 0.7) +   scale_color_viridis_d() +   scale_size(range = c(2, 12)) +   scale_x_log10() +   labs(x = "CO2 emissions", y = "CO2 per capita") + transition_time(year) +   labs(title = "Year: {frame_time}")` with facet wraps (ignore) \#`{r} ggplot(   continent_co2,    aes(x = co2, y=co2_per_capita, size = population, colour = country)   ) +   geom_point(show.legend = TRUE, alpha = 0.7) +   scale_color_viridis_d() +   scale_size(range = c(2, 12)) +   scale_x_log10() +   labs(x = "CO2 emissions", y = "CO2 per capita") +   facet_wrap(~country) + transition_time(year) +   labs(title = "Year: {frame_time}")`

\#`{r} ggplot(   continent_co2,   aes(year, co2_per_capita, group = country, color = factor(country))   ) +   geom_line() +   scale_color_viridis_d() +   labs(x = "Year", y = "CO2 Per Capita", color = "Continent", subtitle = "-", title = "Emissions over the years...", caption = "Data from Our World in Data Org" ) +   theme(legend.position = "top") +   geom_point(aes(group = seq_along(year))) + transition_reveal(year)`
